{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 612x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as a\n",
    "\n",
    "x1=[]\n",
    "x2=[]\n",
    "v1=[]\n",
    "v2=[]\n",
    "t=[]\n",
    "xc1=[]\n",
    "xc2=[]\n",
    "vc1=[]\n",
    "vc2=[]\n",
    "tc=[]\n",
    "x1.append(float(1))\n",
    "x2.append(float(3))\n",
    "v1.append(float(0))\n",
    "v2.append(float(0))\n",
    "tt=float(1000)\n",
    "dt=float(.0001)\n",
    "t.append(0)\n",
    "m1 = 1\n",
    "m2 = 9*m1\n",
    "g = 9.81\n",
    "b=(m1-m2)/(m1+m2)\n",
    "c=(2*m2)/(m1+m2)\n",
    "d=(2*m1)/(m1+m2)\n",
    "e=(m2-m1)/(m1+m2)\n",
    "\n",
    "for i in range(int(tt/dt)):\n",
    "    v1i=v1[i]-g*dt\n",
    "    x1i=x1[i]+((v1i+v1[i])/2)*dt\n",
    "    v2i=v2[i]-g*dt\n",
    "    x2i=x2[i]+((v2i+v2[i])/2)*dt\n",
    "    ti=t[i]+dt \n",
    "    if x1i<=0:\n",
    "        x1i = -x1i\n",
    "        v1i = -v1i\n",
    "    if x1i>=x2i:\n",
    "        vc1.append(v1i)\n",
    "        vc2.append(v2i)\n",
    "        v1i = b*v1[i]+c*v2[i]\n",
    "        v2i = d*v1[i]+e*v2[i]\n",
    "        x1temp=x1i\n",
    "        x2temp=x2i\n",
    "        x1i=x2temp\n",
    "        x2i=x1temp\n",
    "        xc1.append(x1i)\n",
    "        xc2.append(x2i)\n",
    "        tc.append(ti)\n",
    "    x1.append(x1i)\n",
    "    x2.append(x2i)\n",
    "    v1.append(v1i)\n",
    "    v2.append(v2i)\n",
    "    t.append(ti)\n",
    "\n",
    "a.figure(1, figsize=(8.5, 4))\n",
    "a.subplots_adjust(wspace=0.5)\n",
    "ax1 = a.subplot(121)\n",
    "ax1.set_title('Poincare Plot Position vs Velocity')\n",
    "ax1.set_xlabel('$x2$')\n",
    "ax1.set_ylabel('$v2$')\n",
    "#ax1.set_aspect(\"equal\")\n",
    "a.scatter(xc2,vc2, 1)\n",
    "\n",
    "\n",
    "a.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
